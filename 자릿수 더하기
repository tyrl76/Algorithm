자릿수 더하기
자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.
예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.

제한사항
N의 범위 : 100,000,000 이하의 자연수
입출력 예
N	answer
123	6
987	24
입출력 예 설명
입출력 예 #1
문제의 예시와 같습니다.

입출력 예 #2
9 + 8 + 7 = 24이므로 24를 return 하면 됩니다.

My code

func solution(n int) int {
    answer := 0

    for n > 0 {
        answer += n % 10
        n /= 10
    }

    return answer
}

Answers

import "math"

func solution(n int) int {
    answer := 0

    for i := 0; i <= int(math.Log10(float64(n))); i++ {
        answer += calc(i, n)
    }

    return answer
}

func calc(idx int, num int) (result int) {
    if idx == 0 {
        result = num % 10
    } else {
        result = num / int(math.Pow(10, float64(idx))) % 10
    }

    return
}

import "fmt"
import "strconv"
import "strings"

func solution(n int) int {
    answer := 0
    fmt.Println(n)
    str := strconv.Itoa(n)
    result := strings.Split(str, "")

    for i := 0; i < len(result); i++ {
        sum2, err := strconv.Atoi(result[i])

        if err == nil {
            answer = answer + sum2
        }

    }
    return answer
}